{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _Object$assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return _Object$assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _Object$assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\lilliam\\Desktop\\front-end\\practica\\next-redux-pc\\redux\\reducers.js"],"names":["reducer","state","exampleInitialState","action","type","actionTypes","TICK","lastUpdate","ts","light","INCREMENT","count","DECREMENT","RESET"],"mappings":";AAAA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCC,mBAAgC;AAAA,MAAXC,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,WAAW,CAACC,IAAjB;AACE,aAAO,eAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAC9BM,QAAAA,UAAU,EAAEJ,MAAM,CAACK,EADW;AAE9BC,QAAAA,KAAK,EAAE,CAAC,CAACN,MAAM,CAACM;AAFc,OAAzB,CAAP;;AAIF,SAAKJ,WAAW,CAACK,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBT,KAAlB,EAAyB;AAC9BU,QAAAA,KAAK,EAAEV,KAAK,CAACU,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKN,WAAW,CAACO,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBX,KAAlB,EAAyB;AAC9BU,QAAAA,KAAK,EAAEV,KAAK,CAACU,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKN,WAAW,CAACQ,KAAjB;AACE,aAAO,eAAc,EAAd,EAAkBZ,KAAlB,EAAyB;AAC9BU,QAAAA,KAAK,EAAET,mBAAmB,CAACS;AADG,OAAzB,CAAP;;AAGF;AACE,aAAOV,KAAP;AAnBJ;AAqBD,CAtBM","sourcesContent":["export const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TICK:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        light: !!action.light\r\n      })\r\n    case actionTypes.INCREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count + 1\r\n      })\r\n    case actionTypes.DECREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count - 1\r\n      })\r\n    case actionTypes.RESET:\r\n      return Object.assign({}, state, {\r\n        count: exampleInitialState.count\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}