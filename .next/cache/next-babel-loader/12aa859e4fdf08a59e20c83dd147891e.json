{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lilliam\\\\Desktop\\\\front-end\\\\practica\\\\next-redux-pc\\\\pages\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { changeModo as _changeModo, changeName as _changeName } from '../redux/actions';\nimport Nav from '../components/nav';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    modo: state.modo,\n    modoTitle: state.modoTitle\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeModo: function changeModo(modo) {\n      return dispatch(_changeModo());\n    },\n    changeName: function changeName(modo) {\n      return dispatch(_changeName());\n    }\n  };\n}\n\nvar IndexConnected =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexConnected, _Component);\n\n  function IndexConnected() {\n    var _this;\n\n    _classCallCheck(this, IndexConnected);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndexConnected).call(this));\n    _this.state = {\n      name: \"\"\n    };\n    _this.changingModo = _this.changingModo.bind(_assertThisInitialized(_this));\n    _this.typing = _this.typing.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(IndexConnected, [{\n    key: \"changingModo\",\n    value: function changingModo() {\n      console.log(this.props.modo);\n      console.log(this.props.modoTitle);\n      this.props.changeModo();\n    }\n  }, {\n    key: \"typing\",\n    value: function typing(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState(_defineProperty({}, name, value), function () {\n        var nameToStore = this.state.name;\n        this.props.changeName(nameToStore);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), \"INDEX \", this.props.modo, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.changingModo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.modoTitle), React.createElement(\"input\", {\n        name: \"name\",\n        onChange: this.typing,\n        value: this.state.name,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return IndexConnected;\n}(Component);\n\nvar Index = connect(mapStateToProps, mapDispatchToProps)(IndexConnected);\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\lilliam\\Desktop\\front-end\\practica\\next-redux-pc\\pages\\index.js"],"names":["React","Component","connect","changeModo","changeName","Nav","mapStateToProps","state","modo","modoTitle","mapDispatchToProps","dispatch","IndexConnected","name","changingModo","bind","typing","console","log","props","e","target","value","setState","nameToStore","Index"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,EAAoBC,UAAU,IAAVA,WAApB,QAAsC,kBAAtC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAELC,IAAAA,SAAS,EAAEF,KAAK,CAACE;AAFZ,GAAP;AAID,CALD;;AAOA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLR,IAAAA,UAAU,EAAE,oBAAAK,IAAI;AAAA,aAAIG,QAAQ,CAACR,WAAU,EAAX,CAAZ;AAAA,KADX;AAELC,IAAAA,UAAU,EAAE,oBAAAI,IAAI;AAAA,aAAIG,QAAQ,CAACP,WAAU,EAAX,CAAZ;AAAA;AAFX,GAAP;AAID;;IAIKQ,c;;;;;AACJ,4BAAa;AAAA;;AAAA;;AACX;AACA,UAAKL,KAAL,GAAa;AACXM,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,+BAAd;AANW;AAQZ;;;;mCAEc;AACbE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWX,IAAvB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWV,SAAvB;AACA,WAAKU,KAAL,CAAWhB,UAAX;AACD;;;2BACMiB,C,EAAE;AACP,UAAMP,IAAI,GAAGO,CAAC,CAACC,MAAF,CAASR,IAAtB;AACA,UAAMS,KAAK,GAAGF,CAAC,CAACC,MAAF,CAASC,KAAvB;AAEA,WAAKC,QAAL,qBACGV,IADH,EACSS,KADT,GAEE,YAAU;AACV,YAAIE,WAAW,GAAG,KAAKjB,KAAL,CAAWM,IAA7B;AACA,aAAKM,KAAL,CAAWf,UAAX,CAAsBoB,WAAtB;AACD,OALD;AAMD;;;6BAIS;AACR,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,YAES,KAAKL,KAAL,CAAWX,IAFpB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKM,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKK,KAAL,CAAWV,SAAhD,CAJF,EAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKO,MAAlC;AAA0C,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWM,IAA5D;AAAkE,QAAA,IAAI,EAAC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADA;AAUD;;;;EAzC0BZ,S;;AA8C7B,IAAMwB,KAAK,GAAGvB,OAAO,CAACI,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CE,cAA5C,CAAd;AAEA,eAAea,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeModo,changeName } from '../redux/actions';\r\nimport Nav from '../components/nav';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modo: state.modo,\r\n    modoTitle: state.modoTitle\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeModo: modo => dispatch(changeModo()),\r\n    changeName: modo => dispatch(changeName())\r\n  }\r\n}\r\n\r\n\r\n\r\nclass IndexConnected extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      name: \"\"\r\n    }\r\n    this.changingModo = this.changingModo.bind(this)\r\n    this.typing = this.typing.bind(this)\r\n\r\n  }\r\n\r\n  changingModo() {\r\n    console.log(this.props.modo)\r\n    console.log(this.props.modoTitle)\r\n    this.props.changeModo()\r\n  }\r\n  typing(e){\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    this.setState({\r\n      [name]:value\r\n    },function(){\r\n      let nameToStore = this.state.name\r\n      this.props.changeName(nameToStore)\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render () {\r\n    return (\r\n    <div>\r\n     <Nav/>\r\n      INDEX {this.props.modo}\r\n      <br/>\r\n      <button onClick={this.changingModo}>{this.props.modoTitle}</button>\r\n\r\n      <input name=\"name\" onChange={this.typing} value={this.state.name} type=\"text\"/>\r\n    </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Index = connect(mapStateToProps,mapDispatchToProps)(IndexConnected)\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}