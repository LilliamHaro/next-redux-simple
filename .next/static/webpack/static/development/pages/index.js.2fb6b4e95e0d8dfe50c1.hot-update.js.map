{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2fb6b4e95e0d8dfe50c1.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeModo } from '../redux/actions';\r\nimport Nav from '../components/nav';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modo: state.modo,\r\n    modoTitle: state.modoTitle\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeModo: modo => dispatch(changeModo())\r\n  }\r\n}\r\n\r\n\r\n\r\nclass IndexConnected extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      name: \"\"\r\n    }\r\n    this.changingModo = this.changingModo.bind(this)\r\n    this.typing = this.typing.bind(this)\r\n\r\n  }\r\n\r\n  changingModo() {\r\n    console.log(this.props.modo)\r\n    console.log(this.props.modoTitle)\r\n    this.props.changeModo()\r\n  }\r\n  typing(e){\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    this.setState({\r\n      [name]:value\r\n    },function(){\r\n      let nameToStore = this.state.name\r\n      this.props.changeModo(nameStore)\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render () {\r\n    return (\r\n    <div>\r\n     <Nav/>\r\n      INDEX {this.props.modo}\r\n      <br/>\r\n      <button onClick={this.changingModo}>{this.props.modoTitle}</button>\r\n\r\n      <input name=\"name\" onChange={this.typing} value={this.state.name} type=\"text\"/>\r\n    </div>\r\n      )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst Index = connect(mapStateToProps,mapDispatchToProps)(IndexConnected)\r\n\r\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AANA;AAQA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAzCA;AACA;AA6CA;AAEA;;;;A","sourceRoot":""}